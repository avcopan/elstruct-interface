"""
Library of functions to retrieve structural information from a Molpro 2015 output file

Geometries currently supported: 
(1) Final Geometry in Cartesian (xyz) 
(2) Final Geometry in Internal Coordinates
(3) Equilibrium Rotational Constants 

"""

__authors__ = "Kevin Moore, Andreas Copan"
__updated__ = "2019-01-11"

from ..rere import find as ref
from ..rere import pattern as rep
from ..rere import pattern_lib as relib


##### HELPER FUNCTION TO RETRIEVE TEXT BLOCK; TODO: Move to rere library #####

def block(head_string, foot_string, string):
    head_pattern = rep.escape(head_string)
    foot_pattern = rep.escape(foot_string)
    block_pattern = rep.capturing(
        head_pattern + rep.one_or_more(relib.ANY_CHAR, greedy=False) +
        foot_pattern)
    return ref.last_capture(block_pattern, string)

##### Patterns #####

# xyz coords of optimized geom
GEOM_OPT_FINAL_XYZ_PATTERN_BEGIN = 'Current geometry (xyz format, in Angstrom)' 
GEOM_OPT_FINAL_XYZ_PATTERN_END = '*********************' 

# xyz coords of optimized geom
GEOM_OPT_STEP_XYZ_PATTERN_BEGIN = 'END OF GEOMETRY OPTIMIZATION' 
GEOM_OPT_STEP_XYZ_PATTERN_END = 'Geometry written to block' 

XYZ_PATTERN = (
        rep.one_or_more(relib.ANY_CHAR)
        rep.one_or_more(relib.WHITESPACE) + 
        rep.one_or_more(relib.FLOAT) + 
        rep.one_or_more(relib.WHITESPACE) +
        rep.one_or_more(relib.FLOAT) + 
        rep.one_or_more(relib.WHITESPACE) +
        rep.one_or_more(relib.FLOAT) 
)

# internal coords of optimized geom
GEOM_OPT_FINAL_INT_PATTERN_BEGIN = 'Optimized variables' 
GEOM_OPT_FINAL_INT_PATTERN_END = '*********************' 

# internal coords at optimization step geom
GEOM_OPT_STEP_INT_PATTERN_BEGIN = 'Current variables' 
GEOM_OPT_STEP_INT_PATTERN_END = '*********************' 

# Initial internal coord defs
INIT_INT_DEFS_PATTERN_BEGIN = 'Primary working directories'
INIT_INT_DEFS_PATTERN_END = 'Variables initialized'

# Initial geom in xyz generated by Molpro (in bohrs auto)
INIT_XYZ_PATTERN_BEGIN = 'ATOMIC COORDINATES'
INIT_XYZ_PATTERN_END = 'Bond lengths in Bohr (Angstrom)'

XYZ_PATTERN = (
        rep.one_or_more(relib.INTEGER) + 
        rep.one_or_more(relib.WHITESPACE) + 
        rep.one_or_more(relib.ANY_CHAR)
        rep.one_or_more(relib.WHITESPACE) + 
        rep.one_or_more(relib.FLOAT) + 
        rep.one_or_more(relib.WHITESPACE) +
        rep.one_or_more(relib.FLOAT) + 
        rep.one_or_more(relib.WHITESPACE) +
        rep.one_or_more(relib.FLOAT) + 
        rep.one_or_more(relib.WHITESPACE) 
        rep.one_or_more(relib.FLOAT)  
)

EQUIL_ROT_CONSTANT_PATTERN = (
    'Rotational constants:' +
    rep.one_or_more(relib.WHITESPACE) +
    rep.capturing(relib.FLOAT) +
    rep.one_or_more(relib.WHITESPACE) +
    rep.capturing(relib.FLOAT) +
    rep.one_or_more(relib.WHITESPACE) +
    rep.capturing(relib.FLOAT) +
    rep.one_or_more(relib.WHITESPACE) +
    'GHz  (calculated with average atomic masses)'
)


##### Dictionary for strings to find the energies in the files #####

STRUCTURE_READERS = {
    OPT_GEOM_XYZ: geom_xyz_reader,
    OPT_GEOM_INT: geom_internal_reader,
    EQUIL_ROT_CONST: equil_rot_const_reader,
}

##### For lazy testing #####

if __name__ == '__main__':
    STRING = open('output.dat').read()
    print(block('Current geometry', '***********', STRING))
